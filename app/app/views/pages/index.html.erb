<!-- Page Content -->
<div class="container">

  <!-- Hello Section -->
  <div class="row">
      <div class="col-lg-12">
          <h1 class="page-header">Witaj Użytkowniku spragniony wiedzy ! </h2>
      </div>
      <div class="col-md-12">
          <p> Na tej stronie zapoznasz się z trzema ciekawymy algorytmami i przetestujesz ich działanie on-line !</p>
      </div>
  </div>
    <!-- /.row -->



    <!-- Algorithm Section -->
    <div class="row">
        <div class="col-lg-12">
            <h2 class="page-header">
                Algorytmy
            </h1>
        </div>
        <div class="col-md-4">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4><i class="fa fa-fw fa-check"></i> Kodowanie Huffmana</h4>
                </div>
                <div class="panel-body">
                    <p>
                      Kody Huffmana to jedna z powszechnie stosowanych metod kompresji danych.
                      Kompresja ta polega na zastępowaniu znaków kompresowanego pliku krótszymi kodami (a ściślej ciągami bitów),
                      dzięki czemu wynikowy ciąg bitów jest znacznie krótszy od wejściowego.


                      .
                    </p>
                    <%= link_to "Więcej", { controller: "huffman", action: "index" }, class: "btn btn-default" %>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4><i class="fa fa-fw fa-gift"></i>Sortowanie przez kopcowanie</h4>
                </div>
                <div class="panel-body">
                    <p>Podstawą algorytmu jest użycie kolejki priorytetowej zaimplementowanej w postaci binarnego kopca zupełnego.
                      Zasadniczą zaletą kopców jest stały czas dostępu do elementu maksymalnego (lub minimalnego) oraz logarytmiczny czas wstawiania i usuwania elementów;
                      ponadto łatwo można go implementować w postaci tablicy.
                      Algorytm sortowania przez kopcowanie składa się z dwóch faz.
                      W pierwszej sortowane elementy reorganizowane są w celu utworzenia kopca.
                      W drugiej zaś dokonywane jest właściwe sortowanie.

                    </p>
                    <%= link_to "Więcej", { controller: "heapsort", action: "index" }, class: "btn btn-default" %>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4><i class="fa fa-fw fa-compass"></i>Algorytm Dijkstry</h4>
                </div>
                <div class="panel-body">
                    <p>Mając dany graf z wyróżnionym wierzchołkiem (źródłem) algorytm znajduje odległości
                      od źródła do wszystkich pozostałych wierzchołków. Łatwo zmodyfikować go tak, aby szukał wyłącznie
                      (najkrótszej) ścieżki do jednego ustalonego wierzchołka, po prostu przerywając działanie w momencie
                      dojścia do wierzchołka docelowego, bądź transponując tablicę incydencji grafu.
                      Algorytm Dijkstry znajduje w grafie wszystkie najkrótsze ścieżki pomiędzy wybranym wierzchołkiem a
                      wszystkimi pozostałymi, przy okazji wyliczając również koszt przejścia każdej z tych ścieżek</p>
                    <%= link_to "Więcej", { controller: "dijkstra", action: "index" }, class: "btn btn-default" %>
                </div>
            </div>
        </div>
    </div>
    <!-- /.row -->

    <hr>



</div>
